{"version":3,"sources":["app.js"],"names":["CONFIG","MQTT","SUB_TOPIC","process","env","MQTT_SUB_TOPIC","PUB_PREFIX","MQTT_PUB_PREFIX","PUB_TOPIC","MQTT_PUB_TOPIC","HOST","MQTT_HOST","chalk","require","mqtt","client","connect","moment","_","hexChar","b","toString","checksum","message","calculatedSum","checkSum","length","i","console","log","yellow","green","on","subscribe","packet","cmd","topic","JSON","stringify","subscriptions","slice","statusObject","mac1","mac2","len","payload","_payload","cyan","type","name","mac1String","mac2String","val1","readUInt32LE","val2","val3","batt","extend","myName","sensor","parseInt","updated","unix","updatedText","tz","format","serializedObjectJsonString","pubTopics","forEach","idx","publish","retain"],"mappings":"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","file":"app.js","sourcesContent":["\n\nconst CONFIG = {\n  MQTT: {\n    SUB_TOPIC: process.env.MQTT_SUB_TOPIC || 'CMMC/nat/espnow',\n    PUB_PREFIX: process.env.MQTT_PUB_PREFIX || 'ESPNOW',\n    PUB_TOPIC: process.env.MQTT_PUB_TOPIC,\n    HOST: process.env.MQTT_HOST || 'mqtt.cmmc.io'\n  }\n}\n\nconst chalk = require('chalk')\nconst mqtt = require('mqtt')\nconst client = mqtt.connect(`mqtt://${CONFIG.MQTT.HOST}`)\nconst moment = require('moment-timezone')\nconst _ = require('underscore')\n\nlet hexChar = (b) => b.toString(16)\nlet checksum = (message) => {\n  let calculatedSum = 0\n  let checkSum = message[message.length - 1]\n  for (let i = 0; i < message.length - 1; i++) {\n    calculatedSum ^= message[i]\n  }\n  console.log(`calculated sum = ${chalk.yellow(hexChar(calculatedSum))}`)\n  console.log(`     check sum = ${chalk.green(hexChar(calculatedSum))}`)\n  return calculatedSum === checkSum\n}\n\nclient.on('connect', function () {\n  console.log(`mqtt connected being subscribed to ${CONFIG.MQTT.SUB_TOPIC}`)\n  client.subscribe(CONFIG.MQTT.SUB_TOPIC)\n})\n\nclient.on('packetsend', function (packet) {\n  // console.log(`packetsend`, packet);\n  if (packet.cmd === 'publish') {\n    console.log(`published to ${chalk.green(packet.topic)}`)\n  } else if (packet.cmd === 'subscribe') {\n    console.log(`send subscriptions to ${chalk.green(JSON.stringify(packet.subscriptions))}`)\n  }\n})\n\nclient.on('message', function (topic, message) {\n  console.log(`==================================`)\n  // console.log(`orig message = `, message);\n\n  // rhythm 0xd0xa$\n  if (message[message.length - 2] === 0x0d) {\n    message = message.slice(0, message.length - 2)\n  }\n  // console.log(`     message = `, message);\n\n  let statusObject = {}\n  if (checksum(message)) {\n    if (message[0] === 0xfc && message[1] === 0xfd) {\n      let mac1, mac2\n      let len = message[2 + 6 + 6]\n      let payload = message.slice(2 + 6 + 6 + 1, message.length - 1)\n      mac1 = message.slice(2, 2 + 6)\n      mac2 = message.slice(2 + 6, 2 + 6 + 6)\n\n      if (payload[0] === 0xff && payload[1] === 0xfa) {\n        let _payload = payload.slice(2).toString('hex')\n        console.log(`len = ${chalk.cyan(len)}, payload = ${chalk.yellow(`fffa`)}${chalk.cyan(_payload)}`)\n        let type = payload.slice(2, 5)\n        let name = payload.slice(5, 11)\n        let mac1String = mac1.toString('hex')\n        let mac2String = mac2.toString('hex')\n        let [val1, val2, val3, batt] = [\n          payload.readUInt32LE(11) || 0,\n          payload.readUInt32LE(15) || 0,\n          payload.readUInt32LE(19) || 0,\n          payload.readUInt32LE(23) || 0\n        ]\n\n        _.extend(statusObject, {\n          myName: name.toString(),\n          type: type.toString('hex'),\n          sensor: type.toString('hex'),\n          val1: parseInt(val1.toString()),\n          val2: parseInt(val2.toString()),\n          val3: parseInt(val3.toString()),\n          batt: parseInt(batt.toString()),\n          mac1: mac1String,\n          mac2: mac2String,\n          updated: moment().unix().toString(),\n          updatedText: moment().tz('Asia/Bangkok').format('DD/MMMM/YYYY, hh:mm:ss a')\n        })\n\n        console.log(`==================================`)\n        console.log(`type = `, statusObject.type)\n        console.log(`name = `, statusObject.name)\n        console.log(`val1 = `, statusObject.val1)\n        console.log(`val2 = `, statusObject.val2)\n        console.log(`val3 = `, statusObject.val3)\n        console.log(`batt = `, statusObject.batt)\n        console.log(`[master] mac1 = `, statusObject.mac1)\n        console.log(`[ slave] mac2 = `, statusObject.mac2)\n        console.log(`==================================`)\n\n        let serializedObjectJsonString = JSON.stringify(statusObject)\n        // eslint-disable-next-line no-unused-vars\n        let pubTopics = [\n          `${CONFIG.MQTT.PUB_PREFIX}/${mac1String}/${mac2String}/status`,\n          `${CONFIG.MQTT.PUB_PREFIX}/raw/${mac1String}/${mac2String}/status`,\n          `${CONFIG.MQTT.PUB_PREFIX}/${mac1String}/${name.toString()}/status`\n        ].forEach((topic, idx) => {\n          client.publish(topic, serializedObjectJsonString, {retain: false})\n        })\n      } else {\n        console.log('invalid header')\n      }\n    }\n  } else {\n    console.log(message)\n    console.log('================')\n    console.log('================')\n    console.log(message.length)\n    console.log('invalid checksum')\n    console.log('================')\n    console.log('================')\n  }\n})\n\nconsole.log(`Application started ${moment().tz('Asia/Bangkok')}`)\n"],"sourceRoot":"/Users/nat/espnow_serial_bridge/espnow-mqtt/dist"}